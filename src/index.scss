@use 'sass:math';

// Grids
// -------------------------------
$grid-gap: 10px !default;
$grid-gap-x: $grid-gap !default;
$grid-gap-y: $grid-gap !default;
$grid-nums: 24;
$grid-list: (1, 2, 3, 4, 6, 8, 12, 24);
$grid-responsive: (
  xs: 390,
  sm: 1280px,
  md: 1440px,
  lg: 1920px
) !default;

:root {
  --grid-gap-x: #{$grid-gap-x};
  --grid-gap-y: #{$grid-gap-y};
}

.grid-container {
  overflow: hidden;
}

[class*='grid-cols-'] {
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  margin: calc(var(--grid-gap-y) * -0.5) calc(var(--grid-gap-x) * -0.5);
}

// class * with .col-
[class*='grid-cols-'] > * {
  padding: calc(var(--grid-gap-y) * 0.5) calc(var(--grid-gap-x) * 0.5);
  box-sizing: border-box;
  float: left;
  //width: calc((100% / var(--list-num)) - var(--gap-x));
  margin: calc(var(--grid-gap-y) * 0.5) calc(var(--grid-gap-x) * 0.5);
}

// 10/12/24 grids
@each $grid-num in $grid-list {
  .grid-cols-#{$grid-num} > * {
    width: calc(#{math.percentage(math.div(1, $grid-num))} - var(--grid-gap-x));
  }
}

// Responsive grids
@each $breakpoint, $min-width in $grid-responsive {
  @media (min-width: $min-width) {
    @each $grid-num in $grid-list {
      .grid-cols-#{$breakpoint}-#{$grid-num} > * {
        width: calc(
          #{math.percentage(math.div(1, $grid-num))} - var(--grid-gap-x)
        );
      }
    }

    // 在小屏幕下，所有网格默认变为单列
    // [class*='grid-cols-']:not([class*='grid-cols-#{$breakpoint}-']) > * {
    //   width: calc(100% - var(--grid-gap-x));
    // }
  }
}
